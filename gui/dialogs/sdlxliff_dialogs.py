# gui/dialogs/sdlxliff_dialogs.py

from PySide6.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QGroupBox, QLabel, 
    QSpinBox, QRadioButton, QPushButton, QFileDialog,
    QListWidget, QListWidgetItem, QMessageBox, QCheckBox,
    QLineEdit, QFormLayout, QTableWidget, QTableWidgetItem,
    QHeaderView, QAbstractItemView
)
from PySide6.QtCore import Qt, Signal
from pathlib import Path
from typing import List, Optional
import logging

from core.converters.sdlxliff_converter import SdlxliffSplitSettings, SdlxliffMergeSettings

logger = logging.getLogger(__name__)


class SdlxliffSplitDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è SDLXLIFF —Ñ–∞–π–ª–∞"""
    
    def __init__(self, filepath: Path, file_info: dict, parent=None):
        super().__init__(parent)
        self.filepath = filepath
        self.file_info = file_info
        self.settings = None
        self.setup_ui()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle(f"–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ SDLXLIFF: {self.filepath.name}")
        self.resize(600, 500)
        
        layout = QVBoxLayout(self)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(15)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("‚úÇÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è SDLXLIFF —Ñ–∞–π–ª–∞")
        header.setStyleSheet("""
            QLabel {
                font-size: 18px;
                font-weight: bold;
                color: #333;
                margin: 10px 0;
                padding: 10px;
                background: #f0f8ff;
                border-radius: 8px;
                border: 1px solid #ddd;
            }
        """)
        layout.addWidget(header)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
        info_group = self.create_file_info_group()
        layout.addWidget(info_group)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        split_group = self.create_split_settings_group()
        layout.addWidget(split_group)
        
        # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞
        output_group = self.create_output_group()
        layout.addWidget(output_group)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(10)
        
        cancel_btn = QPushButton("‚ùå –û—Ç–º–µ–Ω–∞")
        cancel_btn.setStyleSheet("""
            QPushButton {
                padding: 10px 20px;
                border: 1px solid #ddd;
                border-radius: 5px;
                background: #f5f5f5;
                font-size: 14px;
            }
            QPushButton:hover {
                background: #e5e5e5;
                border-color: #bbb;
            }
        """)
        cancel_btn.clicked.connect(self.reject)
        
        self.split_btn = QPushButton("‚úÇÔ∏è –†–∞–∑–¥–µ–ª–∏—Ç—å")
        self.split_btn.setStyleSheet("""
            QPushButton {
                background: #4CAF50;
                color: white;
                padding: 10px 30px;
                border: none;
                border-radius: 5px;
                font-weight: bold;
                font-size: 14px;
            }
            QPushButton:hover {
                background: #45a049;
            }
        """)
        self.split_btn.clicked.connect(self.accept_split)
        
        buttons_layout.addStretch()
        buttons_layout.addWidget(cancel_btn)
        buttons_layout.addWidget(self.split_btn)
        
        layout.addLayout(buttons_layout)
        
    def create_file_info_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ñ–∞–π–ª–µ"""
        group = QGroupBox("üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ")
        layout = QFormLayout(group)
        
        # –ò–º—è —Ñ–∞–π–ª–∞
        name_label = QLabel(self.filepath.name)
        name_label.setStyleSheet("font-weight: bold;")
        layout.addRow("–ò–º—è —Ñ–∞–π–ª–∞:", name_label)
        
        # –†–∞–∑–º–µ—Ä
        size_mb = self.file_info.get('file_size_mb', 0)
        size_label = QLabel(f"{size_mb:.1f} MB")
        layout.addRow("–†–∞–∑–º–µ—Ä:", size_label)
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        segments = self.file_info.get('segments_count', 0)
        segments_label = QLabel(f"{segments:,}")
        layout.addRow("–°–µ–≥–º–µ–Ω—Ç–æ–≤:", segments_label)
        
        # –û—Ü–µ–Ω–∫–∞ —á–∞—Å—Ç–µ–π –ø–æ —Å–ª–æ–≤–∞–º
        if self.file_info.get('valid', False):
            est_1000 = self.file_info.get('estimated_parts_1000_words', 0)
            est_2000 = self.file_info.get('estimated_parts_2000_words', 0)
            est_5000 = self.file_info.get('estimated_parts_5000_words', 0)
            
            est_label = QLabel(f"1000 —Å–ª–æ–≤: {est_1000} —á–∞—Å—Ç–µ–π | "
                             f"2000 —Å–ª–æ–≤: {est_2000} —á–∞—Å—Ç–µ–π | "
                             f"5000 —Å–ª–æ–≤: {est_5000} —á–∞—Å—Ç–µ–π")
            est_label.setStyleSheet("color: #666; font-size: 11px;")
            layout.addRow("–û—Ü–µ–Ω–∫–∞:", est_label)
            
        return group
        
    def create_split_settings_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"""
        group = QGroupBox("‚öôÔ∏è –ú–µ—Ç–æ–¥ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è")
        layout = QVBoxLayout(group)
        
        # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Ä–∞–≤–Ω—ã–µ —á–∞—Å—Ç–∏
        self.equal_parts_radio = QRadioButton("–ù–∞ —Ä–∞–≤–Ω—ã–µ —á–∞—Å—Ç–∏")
        self.equal_parts_radio.setChecked(True)
        self.equal_parts_radio.toggled.connect(self.on_method_changed)
        layout.addWidget(self.equal_parts_radio)
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π
        parts_layout = QHBoxLayout()
        parts_layout.setContentsMargins(20, 0, 0, 0)
        
        parts_layout.addWidget(QLabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π:"))
        
        self.parts_spin = QSpinBox()
        self.parts_spin.setMinimum(2)
        self.parts_spin.setMaximum(100)
        self.parts_spin.setValue(2)
        self.parts_spin.setStyleSheet("""
            QSpinBox {
                padding: 5px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
        """)
        parts_layout.addWidget(self.parts_spin)
        
        parts_layout.addStretch()
        layout.addLayout(parts_layout)
        
        # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ª–æ–≤
        self.by_words_radio = QRadioButton("–ü–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–ª–æ–≤")
        self.by_words_radio.toggled.connect(self.on_method_changed)
        layout.addWidget(self.by_words_radio)
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –Ω–∞ —á–∞—Å—Ç—å
        words_layout = QHBoxLayout()
        words_layout.setContentsMargins(20, 0, 0, 0)
        
        words_layout.addWidget(QLabel("–°–ª–æ–≤ –Ω–∞ —á–∞—Å—Ç—å:"))
        
        self.words_spin = QSpinBox()
        self.words_spin.setMinimum(100)
        self.words_spin.setMaximum(50000)
        self.words_spin.setValue(2000)
        self.words_spin.setSingleStep(100)
        self.words_spin.setEnabled(False)
        self.words_spin.setStyleSheet("""
            QSpinBox {
                padding: 5px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            QSpinBox:disabled {
                background: #f5f5f5;
            }
        """)
        words_layout.addWidget(self.words_spin)
        
        words_layout.addStretch()
        layout.addLayout(words_layout)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
        self.result_info = QLabel("")
        self.result_info.setStyleSheet("color: #666; font-style: italic; margin-top: 10px;")
        layout.addWidget(self.result_info)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        self.update_result_info()
        self.parts_spin.valueChanged.connect(self.update_result_info)
        self.words_spin.valueChanged.connect(self.update_result_info)
        
        return group
        
    def create_output_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–≤–æ–¥–∞"""
        group = QGroupBox("üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        layout = QVBoxLayout(group)
        
        # –ü—É—Ç—å –≤—ã–≤–æ–¥–∞
        path_layout = QHBoxLayout()
        
        self.output_edit = QLineEdit()
        self.output_edit.setPlaceholderText("–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø–∞–ø–∫–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
        self.output_edit.setStyleSheet("""
            QLineEdit {
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
        """)
        path_layout.addWidget(self.output_edit)
        
        browse_btn = QPushButton("üìÇ –û–±–∑–æ—Ä...")
        browse_btn.clicked.connect(self.browse_output_dir)
        browse_btn.setStyleSheet("""
            QPushButton {
                padding: 8px 15px;
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
            }
            QPushButton:hover {
                background: #f5f5f5;
                border-color: #bbb;
            }
        """)
        path_layout.addWidget(browse_btn)
        
        layout.addLayout(path_layout)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∏–º–µ–Ω–∞—Ö —Ñ–∞–π–ª–æ–≤
        info_label = QLabel("üí° –§–∞–π–ª—ã –±—É–¥—É—Ç –Ω–∞–∑–≤–∞–Ω—ã: filename.1of3.sdlxliff, filename.2of3.sdlxliff, ...")
        info_label.setStyleSheet("color: #666; font-size: 11px; margin-top: 5px;")
        info_label.setWordWrap(True)
        layout.addWidget(info_label)
        
        return group
        
    def on_method_changed(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"""
        by_words = self.by_words_radio.isChecked()
        self.parts_spin.setEnabled(not by_words)
        self.words_spin.setEnabled(by_words)
        self.update_result_info()
        
    def update_result_info(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ"""
        segments = self.file_info.get('segments_count', 0)
        
        if self.equal_parts_radio.isChecked():
            parts = self.parts_spin.value()
            segments_per_part = segments // parts if parts > 0 else 0
            self.result_info.setText(f"‚âà {segments_per_part} —Å–µ–≥–º–µ–Ω—Ç–æ–≤ –Ω–∞ —á–∞—Å—Ç—å")
        else:
            # –î–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ —Å–ª–æ–≤–∞–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ü–µ–Ω–∫—É
            self.result_info.setText("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–µ–π –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            
    def browse_output_dir(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
        dir_path = QFileDialog.getExistingDirectory(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π",
            str(self.filepath.parent)
        )
        
        if dir_path:
            self.output_edit.setText(dir_path)
            
    def accept_split(self):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥"""
        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            self.settings = SdlxliffSplitSettings()
            
            if self.equal_parts_radio.isChecked():
                self.settings.by_word_count = False
                self.settings.parts_count = self.parts_spin.value()
            else:
                self.settings.by_word_count = True
                self.settings.words_per_part = self.words_spin.value()
                
            # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–∞
            output_path = self.output_edit.text().strip()
            if output_path:
                self.settings.output_dir = Path(output_path)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                if not self.settings.output_dir.exists():
                    reply = QMessageBox.question(
                        self,
                        "–°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é?",
                        f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è '{output_path}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n"
                        f"–°–æ–∑–¥–∞—Ç—å –µ—ë?",
                        QMessageBox.Yes | QMessageBox.No,
                        QMessageBox.Yes
                    )
                    
                    if reply == QMessageBox.Yes:
                        self.settings.output_dir.mkdir(parents=True, exist_ok=True)
                    else:
                        return
                        
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
            is_valid, error_msg = self.settings.validate()
            if not is_valid:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", error_msg)
                return
                
            self.accept()
            
        except Exception as e:
            logger.exception(f"Error accepting split settings: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:\n{e}")
            
    def get_settings(self) -> Optional[SdlxliffSplitSettings]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"""
        return self.settings


class SdlxliffMergeDialog(QDialog):
    """–î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è SDLXLIFF —Ñ–∞–π–ª–æ–≤"""
    
    files_reordered = Signal(list)  # List[Path]
    
    def __init__(self, filepaths: List[Path], parent=None):
        super().__init__(parent)
        self.filepaths = filepaths.copy()
        self.settings = None
        self.setup_ui()
        
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle(f"–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ SDLXLIFF —Ñ–∞–π–ª–æ–≤ ({len(self.filepaths)} —Ñ–∞–π–ª–æ–≤)")
        self.resize(700, 600)
        
        layout = QVBoxLayout(self)
        layout.setContentsMargins(15, 15, 15, 15)
        layout.setSpacing(15)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QLabel("üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è SDLXLIFF —Ñ–∞–π–ª–æ–≤")
        header.setStyleSheet("""
            QLabel {
                font-size: 18px;
                font-weight: bold;
                color: #333;
                margin: 10px 0;
                padding: 10px;
                background: #f0f8ff;
                border-radius: 8px;
                border: 1px solid #ddd;
            }
        """)
        layout.addWidget(header)
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        files_group = self.create_files_group()
        layout.addWidget(files_group)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è
        settings_group = self.create_settings_group()
        layout.addWidget(settings_group)
        
        # –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
        output_group = self.create_output_group()
        layout.addWidget(output_group)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(10)
        
        cancel_btn = QPushButton("‚ùå –û—Ç–º–µ–Ω–∞")
        cancel_btn.setStyleSheet("""
            QPushButton {
                padding: 10px 20px;
                border: 1px solid #ddd;
                border-radius: 5px;
                background: #f5f5f5;
                font-size: 14px;
            }
            QPushButton:hover {
                background: #e5e5e5;
                border-color: #bbb;
            }
        """)
        cancel_btn.clicked.connect(self.reject)
        
        self.merge_btn = QPushButton("üîó –û–±—ä–µ–¥–∏–Ω–∏—Ç—å")
        self.merge_btn.setStyleSheet("""
            QPushButton {
                background: #4CAF50;
                color: white;
                padding: 10px 30px;
                border: none;
                border-radius: 5px;
                font-weight: bold;
                font-size: 14px;
            }
            QPushButton:hover {
                background: #45a049;
            }
        """)
        self.merge_btn.clicked.connect(self.accept_merge)
        
        buttons_layout.addStretch()
        buttons_layout.addWidget(cancel_btn)
        buttons_layout.addWidget(self.merge_btn)
        
        layout.addLayout(buttons_layout)
        
    def create_files_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Ñ–∞–π–ª–æ–≤"""
        group = QGroupBox(f"üìÑ –§–∞–π–ª—ã –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è ({len(self.filepaths)})")
        layout = QVBoxLayout(group)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        instruction = QLabel("üí° –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
        instruction.setStyleSheet("color: #666; font-size: 11px; margin-bottom: 5px;")
        layout.addWidget(instruction)
        
        # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        self.files_list = QListWidget()
        self.files_list.setDragDropMode(QListWidget.InternalMove)
        self.files_list.setSelectionMode(QListWidget.SingleSelection)
        self.files_list.setAlternatingRowColors(True)
        self.files_list.setStyleSheet("""
            QListWidget {
                border: 1px solid #ddd;
                border-radius: 4px;
                padding: 5px;
            }
            QListWidget::item {
                padding: 8px;
                border-bottom: 1px solid #f0f0f0;
            }
            QListWidget::item:selected {
                background: #e3f2fd;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
        for i, filepath in enumerate(self.filepaths):
            item = QListWidgetItem(f"{i+1}. {filepath.name}")
            item.setData(Qt.UserRole, filepath)
            self.files_list.addItem(item)
            
        self.files_list.model().rowsMoved.connect(self.on_files_reordered)
        
        layout.addWidget(self.files_list)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–æ–º
        order_buttons = QHBoxLayout()
        
        move_up_btn = QPushButton("‚¨ÜÔ∏è –í–≤–µ—Ä—Ö")
        move_up_btn.clicked.connect(self.move_file_up)
        move_up_btn.setStyleSheet("""
            QPushButton {
                padding: 5px 10px;
                border: 1px solid #ddd;
                border-radius: 3px;
                background: white;
            }
            QPushButton:hover {
                background: #f5f5f5;
            }
        """)
        order_buttons.addWidget(move_up_btn)
        
        move_down_btn = QPushButton("‚¨áÔ∏è –í–Ω–∏–∑")
        move_down_btn.clicked.connect(self.move_file_down)
        move_down_btn.setStyleSheet(move_up_btn.styleSheet())
        order_buttons.addWidget(move_down_btn)
        
        order_buttons.addStretch()
        
        # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞
        auto_order_btn = QPushButton("üî¢ –ê–≤—Ç–æ–ø–æ—Ä—è–¥–æ–∫")
        auto_order_btn.setToolTip("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Ñ–∞–π–ª—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º –≤ –∏–º–µ–Ω–∏")
        auto_order_btn.clicked.connect(self.auto_order_files)
        auto_order_btn.setStyleSheet("""
            QPushButton {
                padding: 5px 15px;
                border: 1px solid #4CAF50;
                border-radius: 3px;
                background: #f0fff0;
                color: #2e7d32;
            }
            QPushButton:hover {
                background: #e8f5e8;
            }
        """)
        order_buttons.addWidget(auto_order_btn)
        
        layout.addLayout(order_buttons)
        
        return group
        
    def create_settings_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è"""
        group = QGroupBox("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
        layout = QVBoxLayout(group)
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è —á–∞—Å—Ç–µ–π
        self.validate_cb = QCheckBox("–ü—Ä–æ–≤–µ—Ä—è—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —á–∞—Å—Ç–µ–π –ø–µ—Ä–µ–¥ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ–º")
        self.validate_cb.setChecked(True)
        self.validate_cb.setToolTip(
            "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ —á–∞—Å—Ç–∏ –∏–º–µ—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É\n"
            "–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã"
        )
        layout.addWidget(self.validate_cb)
        
        # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∞—Å—Ç–µ–π
        self.auto_detect_cb = QCheckBox("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —á–∞—Å—Ç–∏ –ø–æ –∏–º–µ–Ω–∞–º —Ñ–∞–π–ª–æ–≤")
        self.auto_detect_cb.setChecked(True)
        self.auto_detect_cb.setToolTip(
            "–ò—â–µ—Ç —Ñ–∞–π–ª—ã –≤–∏–¥–∞ filename.1of3.sdlxliff –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n"
            "–¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —á–∞—Å—Ç–∏"
        )
        layout.addWidget(self.auto_detect_cb)
        
        return group
        
    def create_output_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞–µ—Ç –≥—Ä—É–ø–ø—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        group = QGroupBox("üíæ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª")
        layout = QVBoxLayout(group)
        
        # –ü—É—Ç—å –≤—ã–≤–æ–¥–∞
        path_layout = QHBoxLayout()
        
        self.output_edit = QLineEdit()
        self.output_edit.setPlaceholderText("–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - filename_merged.sdlxliff")
        self.output_edit.setStyleSheet("""
            QLineEdit {
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
        """)
        path_layout.addWidget(self.output_edit)
        
        browse_btn = QPushButton("üìÑ –û–±–∑–æ—Ä...")
        browse_btn.clicked.connect(self.browse_output_file)
        browse_btn.setStyleSheet("""
            QPushButton {
                padding: 8px 15px;
                border: 1px solid #ddd;
                border-radius: 4px;
                background: white;
            }
            QPushButton:hover {
                background: #f5f5f5;
                border-color: #bbb;
            }
        """)
        path_layout.addWidget(browse_btn)
        
        layout.addLayout(path_layout)
        
        return group
        
    def on_files_reordered(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ —Ñ–∞–π–ª–æ–≤"""
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ filepaths
        self.filepaths.clear()
        for i in range(self.files_list.count()):
            item = self.files_list.item(i)
            filepath = item.data(Qt.UserRole)
            self.filepaths.append(filepath)
            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
            item.setText(f"{i+1}. {filepath.name}")
            
        self.files_reordered.emit(self.filepaths)
        
    def move_file_up(self):
        """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–≤–µ—Ä—Ö"""
        current = self.files_list.currentRow()
        if current > 0:
            item = self.files_list.takeItem(current)
            self.files_list.insertItem(current - 1, item)
            self.files_list.setCurrentRow(current - 1)
            self.on_files_reordered()
            
    def move_file_down(self):
        """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–Ω–∏–∑"""
        current = self.files_list.currentRow()
        if current < self.files_list.count() - 1:
            item = self.files_list.takeItem(current)
            self.files_list.insertItem(current + 1, item)
            self.files_list.setCurrentRow(current + 1)
            self.on_files_reordered()
            
    def auto_order_files(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª—ã"""
        try:
            from sdlxliff_split_merge.io_utils import sort_split_filenames
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
            file_paths = [str(fp) for fp in self.filepaths]
            
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º
            sorted_paths = sort_split_filenames(file_paths)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫
            self.filepaths = [Path(p) for p in sorted_paths]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            self.files_list.clear()
            for i, filepath in enumerate(self.filepaths):
                item = QListWidgetItem(f"{i+1}. {filepath.name}")
                item.setData(Qt.UserRole, filepath)
                self.files_list.addItem(item)
                
            self.files_reordered.emit(self.filepaths)
            
            QMessageBox.information(
                self,
                "–ê–≤—Ç–æ—É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏–µ",
                f"–§–∞–π–ª—ã —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã –ø–æ –Ω–æ–º–µ—Ä–∞–º —á–∞—Å—Ç–µ–π"
            )
            
        except Exception as e:
            logger.error(f"Error auto-ordering files: {e}")
            QMessageBox.warning(
                self,
                "–û—à–∏–±–∫–∞",
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Ñ–∞–π–ª—ã:\n{e}"
            )
            
    def browse_output_file(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
        file_path, _ = QFileDialog.getSaveFileName(
            self,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è",
            str(self.filepaths[0].parent / f"{self.filepaths[0].stem}_merged.sdlxliff"),
            "SDLXLIFF Files (*.sdlxliff)"
        )
        
        if file_path:
            self.output_edit.setText(file_path)
            
    def accept_merge(self):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥"""
        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            self.settings = SdlxliffMergeSettings()
            self.settings.validate_parts = self.validate_cb.isChecked()
            self.settings.auto_detect_parts = self.auto_detect_cb.isChecked()
            
            # –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
            output_path = self.output_edit.text().strip()
            if output_path:
                self.settings.output_path = Path(output_path)
                
            # –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
            is_valid, error_msg = self.settings.validate()
            if not is_valid:
                QMessageBox.warning(self, "–û—à–∏–±–∫–∞", error_msg)
                return
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ñ–∞–π–ª—ã
            if len(self.filepaths) < 2:
                QMessageBox.warning(
                    self,
                    "–û—à–∏–±–∫–∞",
                    "–î–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 —Ñ–∞–π–ª–∞"
                )
                return
                
            self.accept()
            
        except Exception as e:
            logger.exception(f"Error accepting merge settings: {e}")
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:\n{e}")
            
    def get_settings(self) -> Optional[SdlxliffMergeSettings]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è"""
        return self.settings
        
    def get_ordered_files(self) -> List[Path]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤"""
        return self.filepaths.copy()